apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.app.name}}-deployment
  labels:
    app: {{.Values.app.name}}
spec:
  replicas: {{.Values.app.replicas}}
  selector:
    matchLabels:
      app: {{.Values.app.name}}
  template:
    metadata:
      labels:
        app: {{.Values.app.name}}
    spec:
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: cubecorp-pvc-{{.Values.app.name}}
      containers:
        - name: {{.Values.app.name}}-ctr
          {{ if .Values.app.registry }}
          image: {{.Values.app.registry.url}}/{{.Values.app.image.name}}:{{.Values.app.image.tag}}
          {{ else }}
          image: {{.Values.app.image.name}}:{{.Values.app.image.tag}}
          {{ end }}
          ports:
            - containerPort: {{.Values.app.port}}
          env:
            {{ toYaml .Values.app.env | nindent 12 }}
          volumeMounts:
            - mountPath: "/run/secrets"
              name: storage
          readinessProbe:
            httpGet:
              path: /
              port: {{.Values.app.port}}
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: cubecorp-pv-{{.Values.app.name}}
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/{{.Values.app.name}}/secrets"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cubecorp-pvc-{{.Values.app.name}}
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi